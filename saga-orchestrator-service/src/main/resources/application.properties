spring.application.name=saga-orchestrator-service
# This is the base configuration file.
server.port=8080
spring.application.name=saga-orchestrator-service

# --- DEFAULT (LOCAL) PROFILE ---
spring.kafka.bootstrap-servers=localhost:9093
spring.datasource.url=jdbc:postgresql://localhost:5432/saga_db
spring.datasource.username=user
spring.datasource.password=password

# --- COMMON SETTINGS for ALL PROFILES ---
# Database Schema settings
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka Consumer settings
spring.kafka.consumer.group-id=orchestrator-group
# VERY IMPORTANT: read only committed messages to avoid processing uncommitted data
spring.kafka.consumer.properties.isolation.level=read_committed
# We need to explicitly define the deserializer for key and value.
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.common.dtos.SagaEvent

# Kafka Producer settings
# We need to explicitly define the serializer for key and value.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# VERY IMPORTANT: This unique ID enables transactional capabilities for the producer.
spring.kafka.producer.transaction-id-prefix=orchestrator-tx-
# VERY IMPORTANT: This ensures messages are not sent multiple times on retries.
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.retries=3

---
# --- DOCKER PROFILE ---
# These settings will be active when we run inside Docker.
spring.config.activate.on-profile=docker

# Inside docker, services talk to each other using their service names.
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.datasource.url=${SPRING_DATASOURCE_URL}
# The username and password are set in the postgres-db service in docker-compose.yml
spring.datasource.username=user
spring.datasource.password=password