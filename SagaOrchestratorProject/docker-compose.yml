# File: SagaOrchestratorProject/docker-compose.yml
# This file sets up our entire environment: Kafka, PostgreSQL, and our 4 services.
version: '3.8'

services:
  # Zookeeper is required by Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka message broker
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093" # For local machine access
      - "9092:9092" # For inter-container access
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Crucial settings for Kafka Transactions
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # PostgreSQL database for the orchestrator's state machine
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: saga_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Our Saga Orchestrator Service
  saga-orchestrator-service:
    build:
      context: ./saga-orchestrator-service
    container_name: saga-orchestrator-service
    depends_on:
      - kafka
      - postgres-db
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/saga_db

  # Our Payment Service
  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    depends_on:
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  # Our Inventory Service
  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    depends_on:
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  # Our Notification Service
  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    depends_on:
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

# Volume to persist PostgreSQL data
volumes:
  postgres_data: